name: SonarCloud Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-scan:
    name: Run SonarCloud Scan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - ui
          - ei
          - app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (for UI)
        if: matrix.project == 'ui'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (for UI)
        if: matrix.project == 'ui'
        run: npm install

      - name: Run UI Tests
        if: matrix.project == 'ui'
        run: npm test -- --coverage

      - name: Run Sonar Scanner for UI
        if: matrix.project == 'ui'
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=bohdanlev_TestSonarCloud_ui \
            -Dsonar.organization=BohdanLev \
            -Dsonar.host.url=https://sonarcloud.io

      - name: Set up Java
        if: matrix.project == 'ei'
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: Run Maven Build and Tests
        if: matrix.project == 'ei'
        run: mvn clean verify sonar:sonar \
          -Dsonar.projectKey=bohdanlev_TestSonarCloud_ei \
          -Dsonar.organization=BohdanLev \
          -Dsonar.host.url=https://sonarcloud.io

      - name: Set up .NET
        if: matrix.project == 'app'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build and Test .NET
        if: matrix.project == 'app'
        run: dotnet build

      - name: Run Sonar Scanner for .NET
        if: matrix.project == 'app'
        run: dotnet sonarscanner begin /k:"bohdanlev_TestSonarCloud_app" /o:"BohdanLev" /d:sonar.host.url="https://sonarcloud.io"
        run: dotnet build
        run: dotnet test --collect:"Code Coverage"
        run: dotnet sonarscanner end
