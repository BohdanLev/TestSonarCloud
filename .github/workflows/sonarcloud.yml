name: SonarCloud Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-scan:
    name: Run SonarCloud Scan
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # UI Project (Angular)
      - name: Set up Node.js (for UI)
        if: matrix.project == 'ui'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (for UI)
        if: matrix.project == 'ui'
        run: npm install
        working-directory: ./ui

      - name: Run Sonar Scanner for UI
        if: matrix.project == 'ui'
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=bohdanlev_TestSonarCloud_ui \
            -Dsonar.organization=bohdanlev \
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login="${{ secrets.SonarCloudSecret}}"
        working-directory: ./ui

      # .NET Project (App)
      - name: Set up .NET (for App)
        if: matrix.project == 'app'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dotnet-sonarscanner
        if: matrix.project == 'app'
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Build .NET (for App)
        if: matrix.project == 'app'
        run: dotnet build

      - name: Run Sonar Scanner for .NET (for App)
        if: matrix.project == 'app'
        run: dotnet sonarscanner begin /k:"bohdanlev_TestSonarCloud_app" /o:"bohdanlev" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SonarCloudSecret }}"

      - name: Run Tests and End Sonar Scanner for .NET (for App)
        if: matrix.project == 'app'
        run: |
          dotnet test --collect:"Code Coverage"
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SonarCloudSecret }}"
